package com.dicoding.myeventadd.repositoryimport android.app.Applicationimport androidx.lifecycle.LiveDataimport com.dicoding.myeventadd.database.Eventimport com.dicoding.myeventadd.database.EventDaoimport com.dicoding.myeventadd.database.EventRoomDatabaseimport java.util.concurrent.ExecutorServiceimport java.util.concurrent.Executorsclass EventRepository(application: Application) {    private val mEventDao: EventDao    private val executorService: ExecutorService = Executors.newSingleThreadExecutor()    init {        val db = EventRoomDatabase.getDatabase(application)        mEventDao = db.eventDao()    }    fun getAllEvent(): LiveData<List<Event>> = mEventDao.getAllEvent()    fun insert(event: Event) {        executorService.execute { mEventDao.insert(event) }    }    fun delete(event: Event) {        executorService.execute { mEventDao.delete(event) }    }    fun update(event: Event) {        executorService.execute { mEventDao.update(event) }    }}